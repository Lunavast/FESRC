*ターン 全 全:
//行動前の座標を取得します。味方はターン途中で加入したユニットに対応します。
UnSet 行動前座標Ｘ
UnSet 行動前座標Ｙ
ForEach フェイズ
    Set 行動前座標Ｘ[対象パイロット] X(対象パイロット)
    Set 行動前座標Ｙ[対象パイロット] Y(対象パイロット)
Next
Exit
ユニットコマンド "" 味方 Call(味方行動前座標取得):
Exit


//==============================================================================
// 行動前座標Ｘ取得
//------------------------------------------------------------------------------
// 引数で渡されたユニットの行動前座標Ｘを得ます。
//------------------------------------------------------------------------------
// in  : pilot
// out : 行動前座標Ｘ
//==============================================================================
行動前座標Ｘ取得:
Return 行動前座標Ｘ[args(1)]


//==============================================================================
// 行動前座標Ｙ取得
//------------------------------------------------------------------------------
// 引数で渡されたユニットの行動前座標Ｙを得ます。
//------------------------------------------------------------------------------
// in  : pilot
// out : 行動前座標Ｘ
//==============================================================================
行動前座標Ｙ取得:
Return 行動前座標Ｙ[args(1)]


//==============================================================================
// 移動コスト取得
//------------------------------------------------------------------------------
// 対象のユニットが座標aからbに移動した場合の必要移動コストを得ます。
// 座標bに移動できない場合は空の値が返ります。
//------------------------------------------------------------------------------
// in  : pilot
//       afterX 目標座標
//       afterY
//       beforeX 開始座標（省略可能）
//       beforeY
// out : 移動コスト
//==============================================================================
移動コスト取得:
Local pilot = args(1)
Local afterX = args(2)
Local afterY = args(3)
Local beforeX = args(4)
Local beforeY = args(5)

If beforeX = "" Then
    Set beforeX 行動前座標Ｘ[pilot]
EndIf
If beforeY = "" Then
    Set beforeY 行動前座標Ｙ[pilot]
EndIf

// 移動していないようなら0を返す
If (beforeX = afterX) And (beforeY = afterY) Then
    Return 0
EndIf

UnSet 残り移動コスト
Call コストマップ生成 Replace(Info(UnitID(pilot), 移動可能地形), "陸", "陸屋内") beforeX beforeY Info(UnitID(pilot), 移動力)
Local index
Set index ((afterX + (afterY - 1) * Info(マップ, 幅)))
Return (Info(UnitID(pilot), 移動力) - 残り移動コスト[index])



//==============================================================================
// コストマップ生成
//------------------------------------------------------------------------------
// 移動コストマップを生成します。
//------------------------------------------------------------------------------
// in  : 移動可 移動可能地形
//       posX 開始座標
//       posY
//       現コスト その座標に移動した際の残り移動コスト
// out : void
//==============================================================================
コストマップ生成:
Local 移動可
Set 移動可 args(1)
Local posX
Set posX args(2)
Local posY
Set posY args(3)
Local 現コスト
Set 現コスト args(4)

Local 次コスト
Local index
Set index ((posX + (posY - 1) * Info(マップ, 幅)))
If 0 <= 現コスト Then
    If (InStr(移動可, Info(マップ, posX, posY, 地形タイプ)) != 0) Or (InStr(移動可, "空") != 0) Then
        If Info(マップ, posX, posY, 移動コスト) != "-" Then
            If (残り移動コスト[index] = "") Or (残り移動コスト[index] < 現コスト) Then
                Set 残り移動コスト[index] 現コスト
                
                If 1 < posY Then
                    If (InStr(移動可, "空") = 0) Then
                        Set 次コスト (現コスト - Info(マップ, posX, (posY - 1), 移動コスト))
                    Else
                        Set 次コスト (現コスト - 1)
                    EndIf
                    Call コストマップ生成 移動可 posX (posY - 1) 次コスト
                EndIf
                If posX < Info(マップ, 幅) Then
                    If (InStr(移動可, "空") = 0) Then
                        Set 次コスト (現コスト - Info(マップ, (posX + 1), posY, 移動コスト))
                    Else
                        Set 次コスト (現コスト - 1)
                    EndIf
                    Call コストマップ生成 移動可 (posX + 1) posY 次コスト
                EndIf
                If posY < Info(マップ, 高さ) Then
                    If (InStr(移動可, "空") = 0) Then
                        Set 次コスト (現コスト - Info(マップ, posX, (posY + 1), 移動コスト))
                    Else
                        Set 次コスト (現コスト - 1)
                    EndIf
                    Call コストマップ生成 移動可 posX (posY + 1) 次コスト
                EndIf
                If 1 < posX Then
                    If (InStr(移動可, "空") = 0) Then
                        Set 次コスト (現コスト - Info(マップ, (posX - 1), posY, 移動コスト))
                    Else
                        Set 次コスト (現コスト - 1)
                    EndIf
                    Call コストマップ生成 移動可 (posX - 1) posY 次コスト
                EndIf
            EndIf
        EndIf
    EndIf
EndIf
Return


//==============================================================================
// 味方行動前座標取得
//------------------------------------------------------------------------------
// 味方の行動前の座標を取得します。
//------------------------------------------------------------------------------
// in  : void
// out : void
//==============================================================================
味方行動前座標取得:
Local target = IIf(ArgNum = 1, Args(1), 対象パイロット)
Set 行動前座標Ｘ[target] X(target)
Set 行動前座標Ｙ[target] Y(target)
Return 0

